const gulp = require('gulp');
const babel = require('gulp-babel');
const sourcemaps = require('gulp-sourcemaps');
const jsdoc = require('gulp-jsdoc3');
const merge = require('merge-stream');
const jsdocConfig = require('./jsdoc.config.json');

/**
 * generate some JSDoc for every js file in src/
 * @type {Function}
 */
gulp.task('doc', (cb) => {
  gulp.src(['./src/*.js']).pipe(jsdoc(jsdocConfig, cb));
});

/**
 * Transpile everything to ES5, so older versions of node can use it. Required?
 * @type {Function}
 */
gulp.task('dev', () => gulp.src('src/**/*.js')
  .pipe(babel({
    presets: ['@babel/env'],
  }))
  .pipe(gulp.dest('../auth-test/ping')));

/**
 * Builds the source code.
 * @type {Function}
 */
gulp.task('build', () => merge(
  gulp.src('src/**/*.js')
    .pipe(sourcemaps.init())
    .pipe(babel({
      presets: ['@babel/env'],
      plugins: ['@babel/transform-runtime'],
    }))
    .pipe(sourcemaps.write('.'))
    .pipe(gulp.dest('dist')),
  gulp.src('src/**/*.html')
    .pipe(gulp.dest('dist')),
));

/**
 * Watch the files for changes. If they change, re-babel-ify the files in src/
 * Also regenerate the documentation.
 */
gulp.task('watch', () => {
  gulp.watch(['./src/**/*.js'], ['dev']);
});

/**
 * When Gulp is run, we want to transpile it and generate the docs
 * We then watch for any changes.
 */
gulp.task('default', gulp.parallel(['build', 'doc']));

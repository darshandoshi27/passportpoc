const log = require('./logger');

// map environment vars to correct modules
const authTypes = {
  ping: 'cirrus-ping-auth-module',
  'openid-implicit': 'cirrus-ping-auth-module',
  openid: 'cirrus-oidc-auth-module',
  'openid-connect': 'cirrus-oidc-auth-module',
};

// extract type from env
const auth = process.env.AUTH_TYPE;

// if it's a valid type, export it
if (auth in authTypes) {
  const moduleName = authTypes[auth];
  const authModule = require(moduleName);
  // handle exports.default for ES transpilation
  module.exports = {
    authenticate: authModule.authenticate,
    ignore: authModule.ignore,
    default: authModule,
  };
  log('info', 'CIRR_AUTH_MODULE/index.js', `[AUTH] Using ${auth} flow`);
  log('info', 'CIRR_AUTH_MODULE/index.js', `[AUTH] Using ${moduleName}`);
} else {
  log('debug', 'CIRR_AUTH_MODULE/index.js', `[AUTH] ${auth} is not a valid auth type`);
  log('debug', 'CIRR_AUTH_MODULE/index.js', '[AUTH] Please select from the following:');
  log('debug', 'CIRR_AUTH_MODULE/index.js', '\t- "openid-implicit"');
  log('debug', 'CIRR_AUTH_MODULE/index.js', '\t- "openid-connect"');
  // export empty functions so that the user's program doesn't crash
  const f = () => {};
  module.exports = {
    authenticate: f,
    ignore: f,
    default: { authenticate: f, ignore: f },
  };
}

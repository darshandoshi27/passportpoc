"use strict";

var log = require('./logger'); // map environment vars to correct modules


var authTypes = {
  ping: 'cirrus-ping-auth-module',
  'openid-implicit': 'cirrus-ping-auth-module',
  openid: 'cirrus-oidc-auth-module',
  'openid-connect': 'cirrus-oidc-auth-module'
}; // extract type from env

var auth = process.env.AUTH_TYPE; // if it's a valid type, export it

if (auth in authTypes) {
  var moduleName = authTypes[auth];

  var authModule = require(moduleName); // handle exports.default for ES transpilation


  module.exports = {
    authenticate: authModule.authenticate,
    ignore: authModule.ignore,
    "default": authModule
  };
  log('info', 'CIRR_AUTH_MODULE/index.js', "[AUTH] Using ".concat(auth, " flow"));
  log('info', 'CIRR_AUTH_MODULE/index.js', "[AUTH] Using ".concat(moduleName));
} else {
  log('debug', 'CIRR_AUTH_MODULE/index.js', "[AUTH] ".concat(auth, " is not a valid auth type"));
  log('debug', 'CIRR_AUTH_MODULE/index.js', '[AUTH] Please select from the following:');
  log('debug', 'CIRR_AUTH_MODULE/index.js', '\t- "openid-implicit"');
  log('debug', 'CIRR_AUTH_MODULE/index.js', '\t- "openid-connect"'); // export empty functions so that the user's program doesn't crash

  var f = function f() {};

  module.exports = {
    authenticate: f,
    ignore: f,
    "default": {
      authenticate: f,
      ignore: f
    }
  };
}
//# sourceMappingURL=index.js.map

{"version":3,"sources":["index.js"],"names":["log","require","authTypes","ping","openid","auth","process","env","AUTH_TYPE","moduleName","authModule","module","exports","authenticate","ignore","f"],"mappings":";;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,UAAD,CAAnB,C,CAEA;;;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,yBADU;AAEhB,qBAAmB,yBAFH;AAGhBC,EAAAA,MAAM,EAAE,yBAHQ;AAIhB,oBAAkB;AAJF,CAAlB,C,CAOA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAAzB,C,CAEA;;AACA,IAAIH,IAAI,IAAIH,SAAZ,EAAuB;AACrB,MAAMO,UAAU,GAAGP,SAAS,CAACG,IAAD,CAA5B;;AACA,MAAMK,UAAU,GAAGT,OAAO,CAACQ,UAAD,CAA1B,CAFqB,CAGrB;;;AACAE,EAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,IAAAA,YAAY,EAAEH,UAAU,CAACG,YADV;AAEfC,IAAAA,MAAM,EAAEJ,UAAU,CAACI,MAFJ;AAGf,eAASJ;AAHM,GAAjB;AAKAV,EAAAA,GAAG,CAAC,MAAD,EAAS,2BAAT,yBAAsDK,IAAtD,WAAH;AACAL,EAAAA,GAAG,CAAC,MAAD,EAAS,2BAAT,yBAAsDS,UAAtD,EAAH;AACD,CAXD,MAWO;AACLT,EAAAA,GAAG,CAAC,OAAD,EAAU,2BAAV,mBAAiDK,IAAjD,+BAAH;AACAL,EAAAA,GAAG,CAAC,OAAD,EAAU,2BAAV,EAAuC,0CAAvC,CAAH;AACAA,EAAAA,GAAG,CAAC,OAAD,EAAU,2BAAV,EAAuC,uBAAvC,CAAH;AACAA,EAAAA,GAAG,CAAC,OAAD,EAAU,2BAAV,EAAuC,sBAAvC,CAAH,CAJK,CAKL;;AACA,MAAMe,CAAC,GAAG,SAAJA,CAAI,GAAM,CAAE,CAAlB;;AACAJ,EAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,IAAAA,YAAY,EAAEE,CADC;AAEfD,IAAAA,MAAM,EAAEC,CAFO;AAGf,eAAS;AAAEF,MAAAA,YAAY,EAAEE,CAAhB;AAAmBD,MAAAA,MAAM,EAAEC;AAA3B;AAHM,GAAjB;AAKD","sourcesContent":["const log = require('./logger');\n\n// map environment vars to correct modules\nconst authTypes = {\n  ping: 'cirrus-ping-auth-module',\n  'openid-implicit': 'cirrus-ping-auth-module',\n  openid: 'cirrus-oidc-auth-module',\n  'openid-connect': 'cirrus-oidc-auth-module',\n};\n\n// extract type from env\nconst auth = process.env.AUTH_TYPE;\n\n// if it's a valid type, export it\nif (auth in authTypes) {\n  const moduleName = authTypes[auth];\n  const authModule = require(moduleName);\n  // handle exports.default for ES transpilation\n  module.exports = {\n    authenticate: authModule.authenticate,\n    ignore: authModule.ignore,\n    default: authModule,\n  };\n  log('info', 'CIRR_AUTH_MODULE/index.js', `[AUTH] Using ${auth} flow`);\n  log('info', 'CIRR_AUTH_MODULE/index.js', `[AUTH] Using ${moduleName}`);\n} else {\n  log('debug', 'CIRR_AUTH_MODULE/index.js', `[AUTH] ${auth} is not a valid auth type`);\n  log('debug', 'CIRR_AUTH_MODULE/index.js', '[AUTH] Please select from the following:');\n  log('debug', 'CIRR_AUTH_MODULE/index.js', '\\t- \"openid-implicit\"');\n  log('debug', 'CIRR_AUTH_MODULE/index.js', '\\t- \"openid-connect\"');\n  // export empty functions so that the user's program doesn't crash\n  const f = () => {};\n  module.exports = {\n    authenticate: f,\n    ignore: f,\n    default: { authenticate: f, ignore: f },\n  };\n}\n"],"file":"index.js"}